#!/usr/bin/env python
# coding: utf-8

# Note: from time to time, the PRIMAP data will be updated and hence these files will
# no longer be current. And it should be a new minor release of the calibration if
# data is updated.

# Here, we use v2.6 of PRIMAP. We use Third Party emissions.

# This is a judgement call. Both country-reported and third-party emissions from
# PRIMAP lead to low-biased concentrations when run through fair with AR6 lifetimes.
# It's not controversial to assume that both are underestimates. TP tends to be
# less underestimated than CR, so this is why we use TP. The plots generated by
# 13_check-scalings.py demonstrate this and scale the emissions to reproduce
# observed concentrations. Some gases are pretty severely underestimated like NF3.
# The comparison of reported emissions to those used in RCMIP shows a big difference.
# Like the emissions scalings here, RCMIP is designed to be consisent with
# concentrations, again giving confidence that scaling emissions is probably a lesser
# evil than getting concentrations (and forcing, and warming) wrong.

# PRIMAP will be used for N2O and for CH4 from 1750 to 1969. CH4 after 1970 comes 
# from CEDS, CO2 from GCB, and other GHGs will be inverted from concentrations.

import os

import numpy as np
import pandas as pd
import pooch
from dotenv import load_dotenv

load_dotenv()

print("Getting PRIMAP data...")

cal_v = os.getenv("CALIBRATION_VERSION")
fair_v = os.getenv("FAIR_VERSION")
constraint_set = os.getenv("CONSTRAINT_SET")
datadir = os.getenv("DATADIR")
progress = os.getenv("PROGRESS", "False").lower() in ("true", "1", "t")

# PRIMAP-hist emissions: newest version
primap26 = pooch.retrieve(
    url="https://zenodo.org/records/13752654/files/"
    "Guetschow_et_al_2024a-PRIMAP-hist_v2.6_final_no_rounding_13-Sep-2024.csv",
    known_hash="md5:a9d2d3958211b90885d149a89c27f10e",
    progressbar=progress,
    path=datadir,
)

primap26_df = pd.read_csv(primap26)

for scenario in ["HISTTP"]:
    ch4 = primap26_df.loc[
        (primap26_df["scenario (PRIMAP-hist)"] == scenario)
        & (primap26_df["entity"] == "CH4")
        & (primap26_df["category (IPCC2006_PRIMAP)"] == "M.0.EL")
        & (primap26_df["area (ISO3)"] == "EARTH"),
        "1750":,
    ].values.squeeze()

    n2o = primap26_df.loc[
        (primap26_df["scenario (PRIMAP-hist)"] == scenario)
        & (primap26_df["entity"] == "N2O")
        & (primap26_df["category (IPCC2006_PRIMAP)"] == "M.0.EL")
        & (primap26_df["area (ISO3)"] == "EARTH"),
        "1750":,
    ].values.squeeze()

    df_out = pd.DataFrame(
        [ch4 / 1e3, n2o / 1e3],
        index=["CH4", "N2O"],
        columns=np.arange(1750, 2024),
    )

    os.makedirs(
        f"../../../../../output/fair-{fair_v}/v{cal_v}/{constraint_set}/emissions",
        exist_ok=True,
    )
    df_out.to_csv(
        f"../../../../../output/fair-{fair_v}/v{cal_v}/{constraint_set}/emissions/"
        f"primap-{scenario.lower()}-2.6_1750-2023.csv"
    )
