#!/bin/bash
##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by esgf-data.dkrz.de - 2023/02/16 19:27:53
# Search URL: http://esgf-data.dkrz.de/esg-search/wget/?distrib=false&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST-piAer.r1i1p1f1.Amon.rsutcs.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST-piAer.r1i1p1f1.Amon.rlutcs.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST-piAer.r1i1p1f1.Amon.rlut.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST-piAer.r1i1p1f1.Amon.rsut.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST-piAer.r1i1p1f1.Amon.rsus.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST-piAer.r1i1p1f1.Amon.rsdt.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST-piAer.r1i1p1f1.Amon.rsds.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST-piAer.r1i1p1f1.Amon.clt.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST.r1i1p1f1.Amon.clt.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST.r1i1p1f1.Amon.rsds.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST.r1i1p1f1.Amon.rlutcs.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST.r1i1p1f1.Amon.rlut.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST.r1i1p1f1.Amon.rsutcs.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST.r1i1p1f1.Amon.rsut.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST.r1i1p1f1.Amon.rsus.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST.r1i1p1f1.Amon.rsdt.gn.v20190628|esgf3.dkrz.de
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=
search_url='http://esgf-data.dkrz.de/esg-search/wget/?distrib=false&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST-piAer.r1i1p1f1.Amon.rsutcs.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST-piAer.r1i1p1f1.Amon.rlutcs.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST-piAer.r1i1p1f1.Amon.rlut.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST-piAer.r1i1p1f1.Amon.rsut.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST-piAer.r1i1p1f1.Amon.rsus.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST-piAer.r1i1p1f1.Amon.rsdt.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST-piAer.r1i1p1f1.Amon.rsds.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST-piAer.r1i1p1f1.Amon.clt.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST.r1i1p1f1.Amon.clt.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST.r1i1p1f1.Amon.rsds.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST.r1i1p1f1.Amon.rlutcs.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST.r1i1p1f1.Amon.rlut.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST.r1i1p1f1.Amon.rsutcs.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST.r1i1p1f1.Amon.rsut.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST.r1i1p1f1.Amon.rsus.gn.v20190628|esgf3.dkrz.de&dataset_id=CMIP6.AerChemMIP.HAMMOZ-Consortium.MPI-ESM-1-2-HAM.histSST.r1i1p1f1.Amon.rsdt.gn.v20190628|esgf3.dkrz.de'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'clt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_185001-186912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/clt/gn/v20190628/clt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_185001-186912.nc' 'SHA256' '5867650d468803cd8a23b14e04cbf6e46e7211898dc49de5532bac6400c78869'
'clt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_187001-188912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/clt/gn/v20190628/clt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_187001-188912.nc' 'SHA256' 'ca77238f90186ea0b193cae7368848cc0374167675f39ced75aa6a1dfe54ff36'
'clt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_189001-190912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/clt/gn/v20190628/clt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_189001-190912.nc' 'SHA256' 'bb9b430ad9ca255f5cc1ca32b598a552936e40029685ab2bdd474e5893bebaa7'
'clt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_191001-192912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/clt/gn/v20190628/clt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_191001-192912.nc' 'SHA256' '437d249c3d83047669a2e97c98481b3076147ea2d5f15bdbc239547c9c4c8e51'
'clt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_193001-194912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/clt/gn/v20190628/clt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_193001-194912.nc' 'SHA256' 'c2b76c1a67235704453aff64fba9ae6755b023fa1b819ae120588d3c9ebe71bb'
'clt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_195001-196912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/clt/gn/v20190628/clt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_195001-196912.nc' 'SHA256' '5cb31b73e1583658db529f047813439830fe406239f819d2e4bb69321c209f71'
'clt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_197001-198912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/clt/gn/v20190628/clt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_197001-198912.nc' 'SHA256' '1809dd798b67e50eb2458f6986d6b41b6820339c999aa8cf52887c6e190589d9'
'clt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_199001-200912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/clt/gn/v20190628/clt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_199001-200912.nc' 'SHA256' '6d28a7a2bb7ac9817a573911834659b62bcd245e1b9c5ffd06991df93109062f'
'clt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_201001-201412.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/clt/gn/v20190628/clt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_201001-201412.nc' 'SHA256' '203eaad57b87a12c4ac760a5be10f0cae044e32eebc6c7eda502217647d51da8'
'rlut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_185001-186912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rlut/gn/v20190628/rlut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_185001-186912.nc' 'SHA256' 'f357df9a2b5a979b06127f820341af3a2938dd4f78144b00e59a2cc71c37ce0f'
'rlut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_187001-188912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rlut/gn/v20190628/rlut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_187001-188912.nc' 'SHA256' 'f79ec997c466f05d09aa80693a1994dbc57a8a59e62ab70a8d0cc413314c89c6'
'rlut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_189001-190912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rlut/gn/v20190628/rlut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_189001-190912.nc' 'SHA256' '5bb91aad88703d7c04b9ec30a5f579df7a9e37ead66957867e3d0ea18f132df4'
'rlut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_191001-192912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rlut/gn/v20190628/rlut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_191001-192912.nc' 'SHA256' '986b622dba2348a72d73a881ef030c14db381532e3bb46abac5b35945de70586'
'rlut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_193001-194912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rlut/gn/v20190628/rlut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_193001-194912.nc' 'SHA256' '7d8127b75d4918e7f057da3d1802262647ea10c0e047427d6d3d586fd431f227'
'rlut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_195001-196912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rlut/gn/v20190628/rlut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_195001-196912.nc' 'SHA256' '782fbc5fa6208dd66cd99e47b5082b0c761791774421291dc0a44ba9cf560530'
'rlut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_197001-198912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rlut/gn/v20190628/rlut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_197001-198912.nc' 'SHA256' '8f60841e912ce03e2e7bf909beee5a126b75b1bff476977967d1e5ad0ad21128'
'rlut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_199001-200912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rlut/gn/v20190628/rlut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_199001-200912.nc' 'SHA256' '0f55592712efe8cc8bc420d5ddaaefd7aa922b1b0df1fb747779efd0571161f8'
'rlut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_201001-201412.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rlut/gn/v20190628/rlut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_201001-201412.nc' 'SHA256' '1d530134ad398dc4764faf5eb350c995b2c60dc20c5912ba33d5a3bd4b34fb24'
'rlutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_185001-186912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rlutcs/gn/v20190628/rlutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_185001-186912.nc' 'SHA256' 'ece868729445e5e3039f6d42b3364a0429b1efb03938c1564448992666d859ec'
'rlutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_187001-188912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rlutcs/gn/v20190628/rlutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_187001-188912.nc' 'SHA256' 'f90cb5ef6db4b88163de421d6e7fc113feb0be718fa8a1af17f59f273e67ea49'
'rlutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_189001-190912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rlutcs/gn/v20190628/rlutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_189001-190912.nc' 'SHA256' 'f68680d23453ba8dd5b4a82899482447b183635648456cd9f5085d2ec8d6eef8'
'rlutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_191001-192912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rlutcs/gn/v20190628/rlutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_191001-192912.nc' 'SHA256' '4d336bd8f2042719c36af3c7834b38c463573c127a20cf5ad2d5e1d461af7628'
'rlutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_193001-194912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rlutcs/gn/v20190628/rlutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_193001-194912.nc' 'SHA256' '3aa714236b935a199d33bc374e4528aceb663dfc8cf90f5cdebdbe42e170ac3d'
'rlutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_195001-196912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rlutcs/gn/v20190628/rlutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_195001-196912.nc' 'SHA256' '0f25f7c78e997cb047c914b15417823a917f44541ebbf1f95dd5924525d72319'
'rlutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_197001-198912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rlutcs/gn/v20190628/rlutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_197001-198912.nc' 'SHA256' '8b174baf91997d1c5b9735605a17e7867bc7038d150807d3e13334dd3c047441'
'rlutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_199001-200912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rlutcs/gn/v20190628/rlutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_199001-200912.nc' 'SHA256' '3fe679119463a0ca156da5edad14449c300b1421d6cf67a8bfec79ac6b1cffbb'
'rlutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_201001-201412.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rlutcs/gn/v20190628/rlutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_201001-201412.nc' 'SHA256' 'a77c6d2e22aeecddab04ec7af5e1c936864daa1098e64c55f35f6d4e35a47169'
'rsds_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_185001-186912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsds/gn/v20190628/rsds_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_185001-186912.nc' 'SHA256' 'ad16bd4bc5c112568d5d95949706dadef447d90dc41a913a36de606a1ce32d68'
'rsds_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_187001-188912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsds/gn/v20190628/rsds_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_187001-188912.nc' 'SHA256' '2b3cf40a14d7a1d4fecaa029bd193e1499c9804a81c5fe8a57275aa271559dec'
'rsds_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_189001-190912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsds/gn/v20190628/rsds_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_189001-190912.nc' 'SHA256' '55314a028bfba758b8a538bb78b9ce65b1cd9de87ebc8618d33afe102ded2adc'
'rsds_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_191001-192912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsds/gn/v20190628/rsds_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_191001-192912.nc' 'SHA256' 'f0edfd2e6bfeec33c26e7d34d627101d0e89277b2671205e090fbabd9b8b5e86'
'rsds_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_193001-194912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsds/gn/v20190628/rsds_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_193001-194912.nc' 'SHA256' '22735481d4bbcf02ebb4a86bf1fc68bb48fad6e19303b3d5e17cc8d86f998ad9'
'rsds_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_195001-196912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsds/gn/v20190628/rsds_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_195001-196912.nc' 'SHA256' 'f32679ac9f44ab12c392defbbbeb6e2d9011b5c95983e309e32b07bcf013c75a'
'rsds_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_197001-198912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsds/gn/v20190628/rsds_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_197001-198912.nc' 'SHA256' 'ad1f58523c16eed3583deec387d43790f3a5fac89213342d5e4e99af0a6ea925'
'rsds_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_199001-200912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsds/gn/v20190628/rsds_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_199001-200912.nc' 'SHA256' 'e0928da1fec22812a9fc7a3d2261c17ec573d8b11bfb91bd6ebaf2aadd595ff9'
'rsds_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_201001-201412.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsds/gn/v20190628/rsds_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_201001-201412.nc' 'SHA256' '67b224408d68cd89337fa8f4eaf57e426c33a261b3852829c25a053cf76945e6'
'rsdt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_185001-186912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsdt/gn/v20190628/rsdt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_185001-186912.nc' 'SHA256' 'b58b120cb8bd72adef56f39833c0e4fdbc0defcfe39962aa1665ce8313f197e4'
'rsdt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_187001-188912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsdt/gn/v20190628/rsdt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_187001-188912.nc' 'SHA256' '763426d34a03bc9516f3615b5e08287283ed105f0b46ccae192812960838405f'
'rsdt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_189001-190912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsdt/gn/v20190628/rsdt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_189001-190912.nc' 'SHA256' '8da740d25b7d65f0e15a3e93f848d749be1ee31e9193be220577ad7adc6ac183'
'rsdt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_191001-192912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsdt/gn/v20190628/rsdt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_191001-192912.nc' 'SHA256' 'ecbe377c8b57dd47b8d5a60302947d8a18a6d030de4b33af066124b91131f5bd'
'rsdt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_193001-194912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsdt/gn/v20190628/rsdt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_193001-194912.nc' 'SHA256' 'f12097f44e6ea6c7d1251ad2ce39f9704e53decdfe84e6f02b05241f505dc7d5'
'rsdt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_195001-196912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsdt/gn/v20190628/rsdt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_195001-196912.nc' 'SHA256' '82675d1463d330fa89e4dda1e1b10d976922c76534a1bcc13ae491a19c47c029'
'rsdt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_197001-198912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsdt/gn/v20190628/rsdt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_197001-198912.nc' 'SHA256' '36ca65428ed77ac9475cd5b062e21cf408c9b3fe080616bc9c7f3f624dc8a718'
'rsdt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_199001-200912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsdt/gn/v20190628/rsdt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_199001-200912.nc' 'SHA256' 'ed03e19787754cf5883cae1e64a31570b8876a3ebe2cbb1f22adc2bd40b32669'
'rsdt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_201001-201412.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsdt/gn/v20190628/rsdt_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_201001-201412.nc' 'SHA256' '3cca0b4e1050299c1ca047d37836a3d70af3f867026e5e68e2013f4a3e650067'
'rsus_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_185001-186912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsus/gn/v20190628/rsus_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_185001-186912.nc' 'SHA256' '0bbccbbbb5cda16801588b0cdad698b65595bbf7645a2f7e6b26da608c00b90f'
'rsus_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_187001-188912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsus/gn/v20190628/rsus_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_187001-188912.nc' 'SHA256' '4a5ac33861a0f5dcf520f68142bf22d870ae07864e87b401af6104782be83fe7'
'rsus_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_189001-190912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsus/gn/v20190628/rsus_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_189001-190912.nc' 'SHA256' '3d1710a5f3bef1b1af57477921ef740a80c5b9df6a7dda54544d6fcd90a62b56'
'rsus_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_191001-192912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsus/gn/v20190628/rsus_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_191001-192912.nc' 'SHA256' '1657c75b508b51cb90f0035ee0b89c417a69cf331bd50c2c2b21464f36d65170'
'rsus_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_193001-194912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsus/gn/v20190628/rsus_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_193001-194912.nc' 'SHA256' '76c87f4e8e5c7cd8b2a6a64cb4b147fed3a6f614eeca59b78a6096dd5ee74c48'
'rsus_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_195001-196912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsus/gn/v20190628/rsus_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_195001-196912.nc' 'SHA256' '62ff21ebf97c85d84d7b81bcae8adbceddcad2872409a2362fc44876cfd91b10'
'rsus_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_197001-198912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsus/gn/v20190628/rsus_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_197001-198912.nc' 'SHA256' 'e677c72f9a751add485da9f691b2b5cc68b9d91d4143966fb36ff88df288be7e'
'rsus_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_199001-200912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsus/gn/v20190628/rsus_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_199001-200912.nc' 'SHA256' '7c9489718905b2b80d745ecd5d3edffffef7db7111a52ea93dc3fb8ff9a68214'
'rsus_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_201001-201412.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsus/gn/v20190628/rsus_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_201001-201412.nc' 'SHA256' '829e226f2450af32f399bc8a1971dbc8d92f9062249b352f5480a7bb90b3c1ca'
'rsut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_185001-186912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsut/gn/v20190628/rsut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_185001-186912.nc' 'SHA256' '44a675c9404ff323b987addc3b252140fe00ea47726df7e1c9b233ed7f83d34a'
'rsut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_187001-188912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsut/gn/v20190628/rsut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_187001-188912.nc' 'SHA256' 'b8c44be743d56db1c1758e747ab83983158032c8702409db6751dbd2b2eff1b0'
'rsut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_189001-190912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsut/gn/v20190628/rsut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_189001-190912.nc' 'SHA256' '8a1339275416f744bab0e7063a61699366d73bc190af55519fa05ef6bcf7b688'
'rsut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_191001-192912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsut/gn/v20190628/rsut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_191001-192912.nc' 'SHA256' '97dbc8779a55a1d5af82421b78798f8e2cff3efa615f67ebe5dfc992c4252752'
'rsut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_193001-194912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsut/gn/v20190628/rsut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_193001-194912.nc' 'SHA256' '96134b0509dfdb813ce088eba6acdc9d6275aaea28515a1ea58bf1adf814d0cd'
'rsut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_195001-196912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsut/gn/v20190628/rsut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_195001-196912.nc' 'SHA256' '45e44e33fd782bf1ca87462de62ae4cbb717b0c4c9bd8f029aa18aa2045128cf'
'rsut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_197001-198912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsut/gn/v20190628/rsut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_197001-198912.nc' 'SHA256' 'd7df3d961fbbea8464c1b6211b42607c2ccaf4fe29b91eca7180be7bba018b12'
'rsut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_199001-200912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsut/gn/v20190628/rsut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_199001-200912.nc' 'SHA256' 'ad90d7f2651085b3d5c1f99c22f610e8143e7c0dd209f0cec2ba4a04c4be508c'
'rsut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_201001-201412.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsut/gn/v20190628/rsut_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_201001-201412.nc' 'SHA256' '7301838239f4c10ecce1e18abd620044d4e2e214bcc10dd78f5f461d73a9dae1'
'rsutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_185001-186912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsutcs/gn/v20190628/rsutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_185001-186912.nc' 'SHA256' 'fc61148858d9da515dda18cb3be01cfc9368355b1d5d040042eab6bcc50736cf'
'rsutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_187001-188912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsutcs/gn/v20190628/rsutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_187001-188912.nc' 'SHA256' '61687a1482ae8dab1bd1c30aa6549d720be2a4e483f1eef4f006df95e4191b1d'
'rsutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_189001-190912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsutcs/gn/v20190628/rsutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_189001-190912.nc' 'SHA256' '4e6643439a5a6693d0c3092f4df3a065456e9ed611d3174a5ccf98edb667dc71'
'rsutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_191001-192912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsutcs/gn/v20190628/rsutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_191001-192912.nc' 'SHA256' '95374c609578a49e9e6b8d057a2cf9853eaebb81b30407b3a47567d6890e6c00'
'rsutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_193001-194912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsutcs/gn/v20190628/rsutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_193001-194912.nc' 'SHA256' 'd9c984a7be2b65ca2e899e5b526ea674e7942773f9dc08177ad67d5b2528787f'
'rsutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_195001-196912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsutcs/gn/v20190628/rsutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_195001-196912.nc' 'SHA256' '25c2fb92ac7cd84dc8eac9490ba9875230b753d6a8c9af03b6c31e8fa65ced9a'
'rsutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_197001-198912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsutcs/gn/v20190628/rsutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_197001-198912.nc' 'SHA256' 'ecce85bd5841495f39cb8c28a6380edd056e087b5fedd80e19afd0451236e2d7'
'rsutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_199001-200912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsutcs/gn/v20190628/rsutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_199001-200912.nc' 'SHA256' '623f4fd5106d88ef250f56ef54fa2266a48fe2c2061b4a5a48fa44f83d976349'
'rsutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_201001-201412.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST-piAer/r1i1p1f1/Amon/rsutcs/gn/v20190628/rsutcs_Amon_MPI-ESM-1-2-HAM_histSST-piAer_r1i1p1f1_gn_201001-201412.nc' 'SHA256' '9822a82ffe8dda981ec910df045b17c0c9ac34f59bac644f83609dd86e59d55c'
'clt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_185001-186912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/clt/gn/v20190628/clt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_185001-186912.nc' 'SHA256' '32c5b58b2c70d2da7dce90ff207869b3676c6694e3d222c46b5cfd3b7a61b41c'
'clt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_187001-188912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/clt/gn/v20190628/clt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_187001-188912.nc' 'SHA256' 'd83d7941aa7f9175dff9fa1f2d33521878f14d6d55c38d336ec4d3517f27320b'
'clt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_189001-190912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/clt/gn/v20190628/clt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_189001-190912.nc' 'SHA256' '8a36756dbaea4e350a04616d880022e7699b2f4a11e64d7796435f41ea7b172b'
'clt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_191001-192912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/clt/gn/v20190628/clt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_191001-192912.nc' 'SHA256' '387675f375ec5006090a28c5373854ccd6b3e0690e091a4cab5ef7729264ca62'
'clt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_193001-194912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/clt/gn/v20190628/clt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_193001-194912.nc' 'SHA256' '107199b6daaa31b15ae5fb1933cfcfa98e9107b715dc0d1b19d617980334e591'
'clt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_195001-196912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/clt/gn/v20190628/clt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_195001-196912.nc' 'SHA256' '97f909dbb5bf9a4eeef0b4bf8512f63d4946815b7298aa3ac130e4b82c594efe'
'clt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_197001-198912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/clt/gn/v20190628/clt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_197001-198912.nc' 'SHA256' 'a2acc37a591a7ad76769812a2b5e4c62cf7618678922ac454f529e55dafb8923'
'clt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_199001-200912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/clt/gn/v20190628/clt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_199001-200912.nc' 'SHA256' '05a979e34f0c67e522d8a03b356410e73c420df5681b94273c3de9e5687a7fe2'
'clt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_201001-201412.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/clt/gn/v20190628/clt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_201001-201412.nc' 'SHA256' 'addb2a40d997b4942f3ad3f20dd4e9677a58b9ad2471a06b5532f51a7cc177a1'
'rlut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_185001-186912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rlut/gn/v20190628/rlut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_185001-186912.nc' 'SHA256' 'f5f3a498598392645af6c58a36501061ed5f7796e96f81fbf10f58e26c39c491'
'rlut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_187001-188912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rlut/gn/v20190628/rlut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_187001-188912.nc' 'SHA256' '398c52eb96433b1159c9d19cbd14f409be962a9a0c3733d99983268cde6f0af1'
'rlut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_189001-190912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rlut/gn/v20190628/rlut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_189001-190912.nc' 'SHA256' '2a5b99c5b6d43d68986946afeedb147d430d7d351c76aa4fe3b390b197da4445'
'rlut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_191001-192912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rlut/gn/v20190628/rlut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_191001-192912.nc' 'SHA256' 'cf73488c161ef237e490934a9e552bd170ef10561a1dc968e6d3894267d2808d'
'rlut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_193001-194912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rlut/gn/v20190628/rlut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_193001-194912.nc' 'SHA256' '16fcf89a1ea646af0e25b97491c71700a133664f54b2ad45376f116ff94894c2'
'rlut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_195001-196912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rlut/gn/v20190628/rlut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_195001-196912.nc' 'SHA256' '778900b2f2f255a63af6fe5dbaf3303691925d7d47e27a67a932ecaf540e0c09'
'rlut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_197001-198912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rlut/gn/v20190628/rlut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_197001-198912.nc' 'SHA256' '4c86653ab52cc3b4f88dddeae88bb3150af9d4bc81c943af9994d7f9c080ef37'
'rlut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_199001-200912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rlut/gn/v20190628/rlut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_199001-200912.nc' 'SHA256' 'c25e09efbd3a2ee9f465cf6290868dcd0c767846c1713429893656de0dcde34f'
'rlut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_201001-201412.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rlut/gn/v20190628/rlut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_201001-201412.nc' 'SHA256' '84d5277412d34a285789e3e910def2ce34f0cab5dc4870fcc510122a71d41bc0'
'rlutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_185001-186912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rlutcs/gn/v20190628/rlutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_185001-186912.nc' 'SHA256' 'b56aa8358a2646ec6fcdea62e5404f8367ace93edf81da7191b1244ef58c6c0e'
'rlutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_187001-188912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rlutcs/gn/v20190628/rlutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_187001-188912.nc' 'SHA256' '1492ea073284e72a5d9267177ce41102b04a9f1c3e428c670745323fd2efd807'
'rlutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_189001-190912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rlutcs/gn/v20190628/rlutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_189001-190912.nc' 'SHA256' '683861d494cab477142a0b07917f0a9decb1d3e7e2ec149d90b2a009fa02394d'
'rlutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_191001-192912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rlutcs/gn/v20190628/rlutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_191001-192912.nc' 'SHA256' 'ff709dbdbcf2ff19a697d3181f91a9a27462440032e5765a944bd805b16d4f46'
'rlutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_193001-194912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rlutcs/gn/v20190628/rlutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_193001-194912.nc' 'SHA256' 'ad1ee11c9b41e680cfd2ae5092297a6ef51003e1a45579059602c579ed8902e6'
'rlutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_195001-196912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rlutcs/gn/v20190628/rlutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_195001-196912.nc' 'SHA256' '442e83b5cc2c3e65eb1a5926b55902f6ac2a82f44a3161478a13b78bd6233c73'
'rlutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_197001-198912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rlutcs/gn/v20190628/rlutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_197001-198912.nc' 'SHA256' '89b0ba289be7019ac95f12db5b5e33169940f7f57d2e203b65eb09e0d238f6e8'
'rlutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_199001-200912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rlutcs/gn/v20190628/rlutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_199001-200912.nc' 'SHA256' '179a115eaa320b42ce816b170ed78b0ae14ec0ee21b604c3de7ee5f65a4fc924'
'rlutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_201001-201412.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rlutcs/gn/v20190628/rlutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_201001-201412.nc' 'SHA256' '03977ed01c2a6aa92929d383ccd919a7da8bfaef0f9173b542b89e71f6a61893'
'rsds_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_185001-186912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsds/gn/v20190628/rsds_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_185001-186912.nc' 'SHA256' 'c8c7037251a51cf860d667fe7a45e1879a26dcaa03c0d4676286f5861d29f50a'
'rsds_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_187001-188912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsds/gn/v20190628/rsds_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_187001-188912.nc' 'SHA256' '0336d1e050bcaa590f5b9a7d98b3825f558aee4663f8d78c602e91ecb0b00490'
'rsds_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_189001-190912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsds/gn/v20190628/rsds_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_189001-190912.nc' 'SHA256' '7c09d0569aa300de12a5573bc669c4c1147a3b9108b73e7a9d88aadbb8cf6d62'
'rsds_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_191001-192912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsds/gn/v20190628/rsds_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_191001-192912.nc' 'SHA256' 'd3ec1a9f060068cb6acf8c3cd5794d704d356261c3ae4b3b4ce1ed9f12d1f551'
'rsds_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_193001-194912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsds/gn/v20190628/rsds_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_193001-194912.nc' 'SHA256' '0de6568198d0558bf074161308503bf13ad828b988fbdb66ed5e438521345b05'
'rsds_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_195001-196912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsds/gn/v20190628/rsds_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_195001-196912.nc' 'SHA256' 'af8434073b78d79563a4bbf5f69c76ecdde34bafe67d8ac49f2a0bb1e839f034'
'rsds_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_197001-198912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsds/gn/v20190628/rsds_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_197001-198912.nc' 'SHA256' '84d371c6be0dacc6ec68025e7f9c44b287541ad8f1ee3afb8966f77b4df17fe7'
'rsds_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_199001-200912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsds/gn/v20190628/rsds_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_199001-200912.nc' 'SHA256' 'd08103a024fcc574cb431db6eb75ce21c54db18dbda96d6ac605ce3a29c60180'
'rsds_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_201001-201412.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsds/gn/v20190628/rsds_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_201001-201412.nc' 'SHA256' '197aca26093d06debf4277edcc5cad9304b68889ffac1be431de6809fefb6c94'
'rsdt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_185001-186912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsdt/gn/v20190628/rsdt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_185001-186912.nc' 'SHA256' '79bbb70e296e4ff1c8948e8b6f80a5fde4dbd80205bdce311c2f6409b599307a'
'rsdt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_187001-188912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsdt/gn/v20190628/rsdt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_187001-188912.nc' 'SHA256' '8a7b122b3e4fd610d2c63a6e832dde3820348d657a7941dbadb1af862879d57a'
'rsdt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_189001-190912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsdt/gn/v20190628/rsdt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_189001-190912.nc' 'SHA256' '09db1c41fbc46f3468beb095bceabd44ce72cb38514de55a8c5e678c024d7d8a'
'rsdt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_191001-192912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsdt/gn/v20190628/rsdt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_191001-192912.nc' 'SHA256' '40e356411686188882f519656f12583846378f44605e0675873b4da0a217a961'
'rsdt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_193001-194912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsdt/gn/v20190628/rsdt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_193001-194912.nc' 'SHA256' '6eb7d324f134a8a9103c89bbe32dfcdacf1f81996323892fd3fcb55bc1699c28'
'rsdt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_195001-196912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsdt/gn/v20190628/rsdt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_195001-196912.nc' 'SHA256' 'b22158b803b0bdd623c73d52cbd1ae18cce775b135e6d62734cec71417582386'
'rsdt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_197001-198912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsdt/gn/v20190628/rsdt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_197001-198912.nc' 'SHA256' 'b99e664662e21480023e76b86bd190c07a6ef8496d0e26586fb90d9857735de1'
'rsdt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_199001-200912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsdt/gn/v20190628/rsdt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_199001-200912.nc' 'SHA256' '5402bbbb36b6e7567724e537a4636d8be88ac8317d5f5fd2a8055bf1e4020beb'
'rsdt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_201001-201412.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsdt/gn/v20190628/rsdt_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_201001-201412.nc' 'SHA256' '8cfe1363a67617b4d0203b46e3e85c128272053d365b5497a0bdfe17d575b657'
'rsus_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_185001-186912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsus/gn/v20190628/rsus_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_185001-186912.nc' 'SHA256' '10b9f1b429db144be1e713e0c015b34f488a69f80bd79b2bbac0552923cbfadf'
'rsus_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_187001-188912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsus/gn/v20190628/rsus_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_187001-188912.nc' 'SHA256' 'd0b7693d278331247d51adfd6137ddc79f8e7b9c791a365044cd77ed8dc3fada'
'rsus_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_189001-190912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsus/gn/v20190628/rsus_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_189001-190912.nc' 'SHA256' '13e590ba52ac4a3135637c774921f9a331b28f7e2f20c1b72ba7036e99adf568'
'rsus_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_191001-192912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsus/gn/v20190628/rsus_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_191001-192912.nc' 'SHA256' '9c804fdabea2dbba0757c78019cf4aad4873d122cd5dffa6b9d307afc818d718'
'rsus_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_193001-194912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsus/gn/v20190628/rsus_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_193001-194912.nc' 'SHA256' '6ae109c655ee472f0361041a02c7fd760e5b5f7b19fd3f39bbeedac14fdfcce8'
'rsus_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_195001-196912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsus/gn/v20190628/rsus_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_195001-196912.nc' 'SHA256' '3df6a70906ed5b87b2a0cc989ae1fc1b481435390c105dd5947c331ed47c11fa'
'rsus_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_197001-198912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsus/gn/v20190628/rsus_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_197001-198912.nc' 'SHA256' 'e925052d0068f150ce54cc341754bee90f133194d13eeefe6ef119b89df55f00'
'rsus_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_199001-200912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsus/gn/v20190628/rsus_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_199001-200912.nc' 'SHA256' '02ad4199c65ed8537faae5ea81a7e3a40b1375080e7a32d6614c74e564827a77'
'rsus_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_201001-201412.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsus/gn/v20190628/rsus_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_201001-201412.nc' 'SHA256' 'e2169550eec6896fc58cb6f3a263b6dec50027bda84989dc36c5544650755ddb'
'rsut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_185001-186912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsut/gn/v20190628/rsut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_185001-186912.nc' 'SHA256' '8b393819c05a6ed5c97c0e6d88f320981983bfd76fc45858d66e8cf5005ced30'
'rsut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_187001-188912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsut/gn/v20190628/rsut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_187001-188912.nc' 'SHA256' 'effc1339024fe74681580c86d336082231853a315fece0621126efa27870bcdd'
'rsut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_189001-190912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsut/gn/v20190628/rsut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_189001-190912.nc' 'SHA256' '9361c8735596bb3dc9f0d170524676eed7c90fddda4e6902d32644c7da4c3d89'
'rsut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_191001-192912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsut/gn/v20190628/rsut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_191001-192912.nc' 'SHA256' '5548a04382f3e576b02d17b8e8474cc5fc6b32fa2c3d1e3f8f6cf11fa3ff256c'
'rsut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_193001-194912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsut/gn/v20190628/rsut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_193001-194912.nc' 'SHA256' '72f40b3711d0b8a6002f14dd7ed90ff39aaf6c55a1f94717a0e2f4f0b684ad80'
'rsut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_195001-196912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsut/gn/v20190628/rsut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_195001-196912.nc' 'SHA256' '684eb0d8ca77f55baf57040ef80588d08b3ac3e8f1893dd8b50027a0b3c9fd93'
'rsut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_197001-198912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsut/gn/v20190628/rsut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_197001-198912.nc' 'SHA256' '3b8a57fb5ce23fdd326c58ab1042701c33c6c85e553e084b2343c650a7655c38'
'rsut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_199001-200912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsut/gn/v20190628/rsut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_199001-200912.nc' 'SHA256' 'cb74c66a87c82fafca49a441404857e3f2f4b2aa9ad034d8ed43ee462173538e'
'rsut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_201001-201412.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsut/gn/v20190628/rsut_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_201001-201412.nc' 'SHA256' '213ece44c042f222d6355ddff9489cdff14bb9da400bf166349aa7f970e1598d'
'rsutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_185001-186912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsutcs/gn/v20190628/rsutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_185001-186912.nc' 'SHA256' '4da759bb6a8c031fc137aab6cc5a04f2740e7035fb5afeed41741c74e335896a'
'rsutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_187001-188912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsutcs/gn/v20190628/rsutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_187001-188912.nc' 'SHA256' '70f9027fbd41af01310704399496120b2f6e8241435dc69768d80e84e4cdf641'
'rsutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_189001-190912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsutcs/gn/v20190628/rsutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_189001-190912.nc' 'SHA256' '316f89e6aa269aa105c119e899e553b92b1da527e5e2ec31ad00e9e17ad1c3d9'
'rsutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_191001-192912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsutcs/gn/v20190628/rsutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_191001-192912.nc' 'SHA256' '8b7b1877edc560b6e36e187e34c3115f4487c36bb37a69c6ad5659a77eb2945f'
'rsutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_193001-194912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsutcs/gn/v20190628/rsutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_193001-194912.nc' 'SHA256' '4f89cf49b449cbcce3655de5d33ce02ac81fcb65eff648541296d308b01ade80'
'rsutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_195001-196912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsutcs/gn/v20190628/rsutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_195001-196912.nc' 'SHA256' 'de18c8547de5c0710d547b7a0aa6732433272b435deb13bf95b6711e0363b752'
'rsutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_197001-198912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsutcs/gn/v20190628/rsutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_197001-198912.nc' 'SHA256' '0ae9ebe7a368a20d6b9b9b240381ed5fefd4be0a8bb1bbc568d958de71d20149'
'rsutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_199001-200912.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsutcs/gn/v20190628/rsutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_199001-200912.nc' 'SHA256' '54be24b7d8c2f42b7a44e0621e09993ccbc1a47712990b15e7053a40582fead4'
'rsutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_201001-201412.nc' 'http://esgf3.dkrz.de/thredds/fileServer/cmip6/AerChemMIP/HAMMOZ-Consortium/MPI-ESM-1-2-HAM/histSST/r1i1p1f1/Amon/rsutcs/gn/v20190628/rsutcs_Amon_MPI-ESM-1-2-HAM_histSST_r1i1p1f1_gn_201001-201412.nc' 'SHA256' 'c69d46e0b91a0d0153aa31b97d83fae74018648eab011fc5d8728a4676a07a9e'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

WGET_TRUSTED_CERTIFICATES=$ESG_HOME/certificates


# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags] [openid] [username]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqhHI:T' OPT; do
    case $OPT in
        H) skip_security=1 && use_http_sec=1;; #       : Authenticate with OpenID (username,) and password, without the need for a certificate.
        T) force_TLSv1=1;;              #       : Forces wget to use TLSv1. 
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day); for certificate-less authentication (see -H option), this flag will force login and refresh cookies.
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        I) username_supplied="$OPTARG";;    #<user_id> : Explicitly set user ID.  By default, the user ID is extracted from the last component of the OpenID URL.  Use this flag to override this behaviour.                   
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1 && use_cookies_for_http_basic_auth_start=1;;            #       : completely skip security. It will only work if the accessed data is not secured at all. -- works only if the accessed data is unsecured or a certificate exists or cookies are saved (latter applies to -H option only).
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        p) clean_work=0;;               #       : preserve data that failed checksum
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java could not be found." >&2
        return 1
    fi
    if java -version 2>&1|grep openjdk >/dev/null; then
        openjdk=1;
    else
        openjdk=0;
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if [ $openjdk -eq 1 ]; then
        mVer=${jversion[0]}
        if ((mVer<5)); then
            echo "Openjdk detected. Version 9+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    else
    
        if ((mVer<5)); then
            echo "Java version 1.5+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    fi
}

check_myproxy_logon() {
    if ! type myproxy-logon >& /dev/null; then
	echo "myproxy-logon could not be found." >&2
	return 1
    fi
    echo "myproxy-logon found" >&2
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from github
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2

    if ! wget -O $ESG_HOME/esg-truststore.ts --no-check-certificate https://github.com/ESGF/esgf-dist/raw/master/installer/certs/esg-truststore.ts; then
        echo "Could not fetch esg-truststore";
        return 1
    fi
    
    if ! wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

# Retrieve ESG credentials
unset pass
get_credentials() {
    if check_java
    then
	use_java=1
    else	
	use_java=0
	echo "No suitable java for obtaining certificate - checking for myproxy-logon instead" >&2
	check_myproxy_logon || exit 1
    fi
    #get all certificates
    get_certificates

    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    


    if [ $use_java -eq 1 ]
    then
        local args=
        #get password
	[[ ! "$pass" ]] && read -sp "MyProxy Password? " pass
        [[ "$openId" ]] && args=$args" --oid $openId"
        [[ "$pass" ]] && args=$args" -P $pass"
        [[ "$username" ]] && args=$args" -l $username"
        
        echo -n $'\nRetrieving Credentials...' >&2
        if ! java $(proxy_to_java) -jar $MYPROXY_GETCERT $args --ca-directory $ESG_CERT_DIR --output $ESG_CREDENTIALS ; then        
            echo "Certificate could not be retrieved"
            exit 1
        fi
        echo "done!" >&2
    else
        args=`openid_to_myproxy_args $openId $username` || exit 1
        if ! myproxy-logon $args -b -o $ESG_CREDENTIALS
	then
            echo "Certificate could not be retrieved"
	    exit 1
        fi
	cp $HOME/.globus/certificates/* $ESG_CERT_DIR/	
    fi
}

openid_to_myproxy_args() {
  python - <<EOF || exit 1
import sys
import re
import xml.etree.ElementTree as ET
import urllib2
openid = "$1"
username = "$2" or re.sub(".*/", "", openid)
e = ET.parse(urllib2.urlopen(openid))
servs = [el for el in e.getiterator() if el.tag.endswith("Service")]
for serv in servs:
    servinfo = dict([(re.sub(".*}", "", c.tag), c.text)
                     for c in serv.getchildren()])
    try:
        if servinfo["Type"].endswith("myproxy-service"):
            m = re.match("socket://(.*):(.*)", servinfo["URI"])
            if m:
                host = m.group(1)
                port = m.group(2)
                print "-s %s -p %s -l %s" % (host, port, username)
                break
    except KeyError:
        continue
else:
    sys.stderr.write("myproxy service could not be found\n")
    sys.exit(1)
EOF
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR --ca-certificate=$ESG_CERT"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum_ $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

#Our own sha256sum function call that takes into account machines that don't have sha256sum but do have sha2 (i.e. mac os x)
sha256sum_() {
    hash -r
    if type sha256sum >& /dev/null; then
        echo $(sha256sum $@)
    elif type shasum >& /dev/null; then
        echo $(shasum -a 256 $@)
    else
        echo $(sha2 -q -256 $@)
    fi
}

get_mod_time_() {
    if ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    else
        #on linux (cygwin) modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

#Download data from node using cookies and not certificates.
download_http_sec()
{
  #The data to be downloaded.
  data=" $url"
  filename="$file"  

  #Wget args.
  if ((insecure)) 
  then
   wget_args=" --no-check-certificate --cookies=on  --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt " 
  else
   wget_args=" --ca-directory=$WGET_TRUSTED_CERTIFICATES --cookies=on --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt "  
  fi 

  if ((use_cookies_for_http_basic_auth_start)) || ((use_cookies_for_http_basic_auth)) 
  then
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
  fi
  
  if((force_TLSv1))
  then
   wget_args=" $wget_args"" --secure-protocol=TLSv1 "
  fi
  
  
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
    wget_args="$wget_args $ESGF_WGET_OPTS"
  fi  
  

  #use cookies for the next downloads
  use_cookies_for_http_basic_auth=1;
   
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "wget $wget_args $data\n"
  fi


  #Try to download the data. 
  command="wget $wget_args -O $filename $data"
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
      
  #Extract orp service from url ?
  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" == 1 )) && 
  if  echo "$http_resp" | grep -q "/esg-orp/"      
  then
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   orp_service=$(echo "$urls" | tr '\n' ' ' | cut -d' ' -f 2)


   #Use cookies for transaction with orp.
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
   
   #Download data using either http basic auth or http login form.
   if [[ "$openid_c" == */openid/  || "$openid_c" == */openid ]]
   then
    download_http_sec_open_id
   else
    download_http_sec_decide_service
   fi
  else  
   if    echo "$http_resp" | grep -q "401 Unauthorized"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || echo "$http_resp" | grep -q "Connection timed out."  \
      || echo "$http_resp" | grep -q "no-check-certificate"  \
      || (( $cmd_exit_status != 0 ))      
   then 
    echo "ERROR : http request to OpenID Relying Party service failed."
    failed=1
   fi
  fi
}


#Function that decides which implementaion of idp to use.
download_http_sec_decide_service()
{
  #find claimed id

  pos=$(echo "$openid_c" | egrep -o '/' | wc -l)
  username_c=$(echo "$openid_c"  | cut -d'/' -f "$(($pos + 1))")
  esgf_uri=$(echo "$openid_c" | egrep -o '/esgf-idp/openid/')

  host=$(echo "$openid_c"  | cut -d'/' -f 3)
  #test ceda first.

  if [[ -z "$esgf_uri" ]]
  then
   openid_c_tmp="https://""$host""/openid/"
  else
   openid_c_tmp="https://""$host""/esgf-idp/openid/" 
  fi

  command="wget "$openid_c_tmp" --no-check-certificate ${force_TLSv1:+--secure-protocol=TLSv1} -O-"
        
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
   command="$command $ESGF_WGET_OPTS"
  fi  
          
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "$command\n"
  fi
            

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
  

  if    echo "$http_resp" | grep -q "[application/xrds+xml]"  \
     && echo "$http_resp" | grep -q "200 OK"  \
     && (( cmd_exit_status == 0 ))       
  then
   openid_c=$openid_c_tmp
   download_http_sec_open_id
  else
   if [[ -z "$esgf_uri" ]]
   then
    echo "ERROR : HTTP request to OpenID Relying Party service failed."
    failed=1
   else
   download_http_sec_cl_id
   fi
  fi
}


download_http_sec_retry()
{
  echo -e "\nRetrying....\n"
  #Retry in case that last redirect did not work, this happens with older version of wget.
  command="wget $wget_args $data"
      
  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi   
   
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"

  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
   
  if    echo "$http_resp" | grep -q "401 Unauthorized"  \
     || echo "$http_resp" | grep -q "403: Forbidden"  \
     || echo "$http_resp" | grep -q "Connection timed out."  \
     || echo "$http_resp" | grep -q "no-check-certificate"  \
     || (( $cmd_exit_status != 0 ))      
  then 
   echo -e "\nERROR : Retry failed.\n"
   #rm "$filename"
   failed=1
  fi #if retry failed.
}

#Function for downloading data using the claimed id.
download_http_sec_cl_id()
{
  #Http request for sending openid to the orp service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\"  $wget_args -O- https://$orp_service/esg-orp/j_spring_openid_security_check.htm "

  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "wget $command\n"
  fi 
  
  
  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"

  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
    
  
  #Extract orp service from openid ?
  #Evaluate response.If redirected to idp service send the credentials.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( redirects == 2  )) && 
  if  echo "$http_resp" | grep -q "login.htm"  && (( cmd_exit_status == 0 ))   
  then 
  
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   idp_service=$(echo "$urls"  | tr '\n' ' ' | cut -d' ' -f 2) 
      
   command="wget --post-data  password=\"$password_c\" $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$idp_service/esgf-idp/idp/login.htm"
   

   #Debug message.
   if  ((debug))
   then
    echo -e "Executing:\n"
    echo -e "wget $command\n"
   fi 

   #Execution of command.
   http_resp=$(eval $command  2>&1)
   cmd_exit_status="$?"
      
   if ((debug))
   then
    echo -e "\nHTTP response:\n $http_resp\n"
   fi 
        
   #Evaluate response. 
   #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
   #(( "$redirects" != 5 )) \ 
   if    echo "$http_resp" | grep -q "text/html"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || (( cmd_exit_status != 0 ))        
   then 
    rm "$filename"
    download_http_sec_retry
   fi
 
  else
   echo "ERROR : HTTP request to OpenID Provider service failed."
   failed=1
  fi #if redirected to idp.  
}



download_http_sec_open_id()
{
  #Http request for sending openid to the orp web service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\" --header=\"esgf-idea-agent-type:basic_auth\" --http-user=\"$username_c\" --http-password=\"$password_c\"  $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$orp_service/esg-orp/j_spring_openid_security_check.htm "


  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi 

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 

  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" != 7 )) ||
  if   echo "$http_resp" | grep -q "text/html"  ||  (( $cmd_exit_status != 0 ))   
  then
   rm "$filename"
   download_http_sec_retry     
  fi #if error during http basic authentication. 
  
}


download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c ${force_TLSv1:+--secure-protocol=TLSv1} $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                if ((use_http_sec))
                then
                 download_http_sec
                 if ((failed))
                 then
                  break
                 fi
                else
                 $wget -O "$file" $url || { failed=1; break; }  
                fi                
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

http_basic_auth_func_info_message()
{
  echo  "********************************************************************************"
  echo  "*                                                                              *"
  echo  "* Note that new functionality to allow authentication without the need for     *"
  echo  "* certificates is available with this version of the wget script.  To enable,  *"
  echo  "* use the \"-H\" option and enter your OpenID and password when prompted:        *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -H [options...]                                     *"
  echo  "*                                                                              *"
  echo  "* For a full description of the available options use the help option:         *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -h                                                  *"
  echo  "*                                                                              *"
  echo  "********************************************************************************"
}

#
# MAIN
#

if ((!use_http_sec))
then 
 http_basic_auth_func_info_message
fi

echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
Script created for 144 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials

if ((use_http_sec))
then 
     
 if (( ! insecure))
 then 
  get_certificates
 fi

 #Cookies folder.
 COOKIES_FOLDER="$ESG_HOME/wget_cookies"
 
 if (( force ))
 then
  if [ -d $COOKIES_FOLDER ] 
  then
   rm -rf $COOKIES_FOLDER
  fi
 fi

 #Create cookies folder. 
 if [[ ! -d $COOKIES_FOLDER ]] 
 then
  mkdir $COOKIES_FOLDER
 fi
 
 if((! use_cookies_for_http_basic_auth_start))
 then

  #Read openid.
  if [[ ! -z "$openId" ]]
  then
   openid_c="$openId"
  elif ( (("$#" > 1)) || (("$#" == 1)) ) 
  then
   openid_c=$1
  else
   read -p    "Enter your openid : " openid_c
  fi
  
  
  #Read username.
  if [[ ! -z "$username_supplied" ]]
  then
   username_c="$username_supplied"
  elif (("$#" == 2))
  then
   username_c=$2
  elif [[ "$openid_c" == */openid/ || "$openid_c" == */openid ]]
  then
   read -p    "Enter username : " username_c
  fi
  
  #Read password.
  read -s -p "Enter password : " password_c
  echo -e "\n"

 fi #use cookies

fi #use_http_sec 


#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_


echo "done"
