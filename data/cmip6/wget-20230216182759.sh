#!/bin/bash
##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by esgf.ceda.ac.uk - 2023/02/16 18:27:59
# Search URL: https://esgf.ceda.ac.uk/esg-search/wget?distrib=false&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST.r1i1p1f2.Amon.rsutcs.gn.v20190902|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST.r1i1p1f2.Amon.rsut.gn.v20190902|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST.r1i1p1f2.Amon.rsus.gn.v20190902|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST.r1i1p1f2.Amon.rsdt.gn.v20190902|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST.r1i1p1f2.Amon.rsds.gn.v20190902|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST.r1i1p1f2.Amon.rlutcs.gn.v20190902|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST.r1i1p1f2.Amon.rlut.gn.v20190902|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST.r1i1p1f2.Amon.clt.gn.v20190902|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST-piAer.r1i1p1f2.Amon.rsutcs.gn.v20191022|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST-piAer.r1i1p1f2.Amon.rsut.gn.v20191022|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST-piAer.r1i1p1f2.Amon.rsus.gn.v20191022|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST-piAer.r1i1p1f2.Amon.rsdt.gn.v20191022|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST-piAer.r1i1p1f2.Amon.rsds.gn.v20191022|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST-piAer.r1i1p1f2.Amon.rlutcs.gn.v20191022|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST-piAer.r1i1p1f2.Amon.rlut.gn.v20191022|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST-piAer.r1i1p1f2.Amon.clt.gn.v20191022|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r3i1p1f3.Amon.rsutcs.gn.v20200924|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r3i1p1f3.Amon.rsut.gn.v20200924|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r3i1p1f3.Amon.rsus.gn.v20200924|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r3i1p1f3.Amon.rsdt.gn.v20200924|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r3i1p1f3.Amon.rsds.gn.v20200924|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r3i1p1f3.Amon.rlutcs.gn.v20200924|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r3i1p1f3.Amon.rlut.gn.v20200924|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r3i1p1f3.Amon.clt.gn.v20200924|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r2i1p1f3.Amon.rsutcs.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r2i1p1f3.Amon.rsut.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r2i1p1f3.Amon.rsus.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r2i1p1f3.Amon.rsdt.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r2i1p1f3.Amon.rsds.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r2i1p1f3.Amon.rlutcs.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r2i1p1f3.Amon.rlut.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r2i1p1f3.Amon.clt.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r1i1p1f3.Amon.rsutcs.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r1i1p1f3.Amon.rsut.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r1i1p1f3.Amon.rsus.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r1i1p1f3.Amon.rsdt.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r1i1p1f3.Amon.rsds.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r1i1p1f3.Amon.rlutcs.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r1i1p1f3.Amon.rlut.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r1i1p1f3.Amon.clt.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-control.r1i1p1f3.Amon.rsutcs.gn.v20191113|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-control.r1i1p1f3.Amon.rsut.gn.v20191113|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-control.r1i1p1f3.Amon.rsus.gn.v20191113|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-control.r1i1p1f3.Amon.rsdt.gn.v20191113|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-control.r1i1p1f3.Amon.rsds.gn.v20191113|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-control.r1i1p1f3.Amon.rlutcs.gn.v20191113|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-control.r1i1p1f3.Amon.rlut.gn.v20191113|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-control.r1i1p1f3.Amon.clt.gn.v20191113|esgf.ceda.ac.uk
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=
search_url='https://esgf.ceda.ac.uk/esg-search/wget?distrib=false&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST.r1i1p1f2.Amon.rsutcs.gn.v20190902|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST.r1i1p1f2.Amon.rsut.gn.v20190902|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST.r1i1p1f2.Amon.rsus.gn.v20190902|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST.r1i1p1f2.Amon.rsdt.gn.v20190902|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST.r1i1p1f2.Amon.rsds.gn.v20190902|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST.r1i1p1f2.Amon.rlutcs.gn.v20190902|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST.r1i1p1f2.Amon.rlut.gn.v20190902|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST.r1i1p1f2.Amon.clt.gn.v20190902|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST-piAer.r1i1p1f2.Amon.rsutcs.gn.v20191022|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST-piAer.r1i1p1f2.Amon.rsut.gn.v20191022|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST-piAer.r1i1p1f2.Amon.rsus.gn.v20191022|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST-piAer.r1i1p1f2.Amon.rsdt.gn.v20191022|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST-piAer.r1i1p1f2.Amon.rsds.gn.v20191022|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST-piAer.r1i1p1f2.Amon.rlutcs.gn.v20191022|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST-piAer.r1i1p1f2.Amon.rlut.gn.v20191022|esgf.ceda.ac.uk&dataset_id=CMIP6.AerChemMIP.MOHC.UKESM1-0-LL.histSST-piAer.r1i1p1f2.Amon.clt.gn.v20191022|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r3i1p1f3.Amon.rsutcs.gn.v20200924|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r3i1p1f3.Amon.rsut.gn.v20200924|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r3i1p1f3.Amon.rsus.gn.v20200924|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r3i1p1f3.Amon.rsdt.gn.v20200924|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r3i1p1f3.Amon.rsds.gn.v20200924|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r3i1p1f3.Amon.rlutcs.gn.v20200924|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r3i1p1f3.Amon.rlut.gn.v20200924|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r3i1p1f3.Amon.clt.gn.v20200924|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r2i1p1f3.Amon.rsutcs.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r2i1p1f3.Amon.rsut.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r2i1p1f3.Amon.rsus.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r2i1p1f3.Amon.rsdt.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r2i1p1f3.Amon.rsds.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r2i1p1f3.Amon.rlutcs.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r2i1p1f3.Amon.rlut.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r2i1p1f3.Amon.clt.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r1i1p1f3.Amon.rsutcs.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r1i1p1f3.Amon.rsut.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r1i1p1f3.Amon.rsus.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r1i1p1f3.Amon.rsdt.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r1i1p1f3.Amon.rsds.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r1i1p1f3.Amon.rlutcs.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r1i1p1f3.Amon.rlut.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-histaer.r1i1p1f3.Amon.clt.gn.v20200923|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-control.r1i1p1f3.Amon.rsutcs.gn.v20191113|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-control.r1i1p1f3.Amon.rsut.gn.v20191113|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-control.r1i1p1f3.Amon.rsus.gn.v20191113|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-control.r1i1p1f3.Amon.rsdt.gn.v20191113|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-control.r1i1p1f3.Amon.rsds.gn.v20191113|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-control.r1i1p1f3.Amon.rlutcs.gn.v20191113|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-control.r1i1p1f3.Amon.rlut.gn.v20191113|esgf.ceda.ac.uk&dataset_id=CMIP6.RFMIP.MOHC.HadGEM3-GC31-LL.piClim-control.r1i1p1f3.Amon.clt.gn.v20191113|esgf.ceda.ac.uk'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'clt_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST-piAer/r1i1p1f2/Amon/clt/gn/v20191022/clt_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_185001-194912.nc' 'SHA256' '8b5b73c0731eb607e221bc758384ad7bd9a743da97bd591ec06886865c118fe1'
'clt_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_195001-201412.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST-piAer/r1i1p1f2/Amon/clt/gn/v20191022/clt_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_195001-201412.nc' 'SHA256' '133a1bc57d87b8566e1ef4b4e54413e3acda6bc4ddf92b54dce096264b4806fe'
'rlut_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST-piAer/r1i1p1f2/Amon/rlut/gn/v20191022/rlut_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_185001-194912.nc' 'SHA256' '16844f1cddff2f7a2ee6e98caeaf95e3c5e1424e1c1b1286e3fa9e3ec1a328a6'
'rlut_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_195001-201412.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST-piAer/r1i1p1f2/Amon/rlut/gn/v20191022/rlut_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_195001-201412.nc' 'SHA256' '570acc9db589fe12f05c9f2449964a80a75b5d97fe2aa1805beffa09e09708ad'
'rlutcs_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST-piAer/r1i1p1f2/Amon/rlutcs/gn/v20191022/rlutcs_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_185001-194912.nc' 'SHA256' '825373b9cd139eee5563a2e03d51b8948f8ed0b2adfb917220445cad31fc2eaa'
'rlutcs_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_195001-201412.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST-piAer/r1i1p1f2/Amon/rlutcs/gn/v20191022/rlutcs_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_195001-201412.nc' 'SHA256' '7689b7f633434a95bd963ce0877f1f5e825f91999f3f1402097463a9df657c79'
'rsds_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST-piAer/r1i1p1f2/Amon/rsds/gn/v20191022/rsds_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_185001-194912.nc' 'SHA256' 'f142a39e5d766aa9c15787d0bbbe3f1f7849f833a340e468a75ede92819cca8d'
'rsds_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_195001-201412.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST-piAer/r1i1p1f2/Amon/rsds/gn/v20191022/rsds_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_195001-201412.nc' 'SHA256' 'f4e210971c0b611eab3e8c5cb26d27209e305c5f0b6fab9a9b6db627e58edd38'
'rsdt_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST-piAer/r1i1p1f2/Amon/rsdt/gn/v20191022/rsdt_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_185001-194912.nc' 'SHA256' '97f08e9d5673c1b46d14d305c6f867143225eeedd6eabb282e0e58bd6d31095e'
'rsdt_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_195001-201412.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST-piAer/r1i1p1f2/Amon/rsdt/gn/v20191022/rsdt_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_195001-201412.nc' 'SHA256' 'a6296b0601a2671a4231e07140b70bc78f105e9501199d881287454e45734a2f'
'rsus_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST-piAer/r1i1p1f2/Amon/rsus/gn/v20191022/rsus_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_185001-194912.nc' 'SHA256' '15b7ab2007111aa885a9ccbffd0acc68535456ba9a0cbe0780ffb6af775cb577'
'rsus_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_195001-201412.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST-piAer/r1i1p1f2/Amon/rsus/gn/v20191022/rsus_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_195001-201412.nc' 'SHA256' '6a49e26d9453e8bb711c653d9b66466477254e9254b227daea87ab1c90d6ca5d'
'rsut_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST-piAer/r1i1p1f2/Amon/rsut/gn/v20191022/rsut_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_185001-194912.nc' 'SHA256' '5e30c756fd752c34e722a6ae7965bdea700a7d5663aad84a51fa408772faf836'
'rsut_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_195001-201412.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST-piAer/r1i1p1f2/Amon/rsut/gn/v20191022/rsut_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_195001-201412.nc' 'SHA256' '8f84e3ad043aded39007197c7900205cdf46c34d3d65cba9110831ca6e15005d'
'rsutcs_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST-piAer/r1i1p1f2/Amon/rsutcs/gn/v20191022/rsutcs_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_185001-194912.nc' 'SHA256' 'df0143454ec7696c633588a097798bc562be0604e1bbf660de4fee3fe9592c1d'
'rsutcs_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_195001-201412.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST-piAer/r1i1p1f2/Amon/rsutcs/gn/v20191022/rsutcs_Amon_UKESM1-0-LL_histSST-piAer_r1i1p1f2_gn_195001-201412.nc' 'SHA256' '8a37f675742bc92f0f3d409365593ef6f580d547564a66293de2049a82c84bfd'
'clt_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST/r1i1p1f2/Amon/clt/gn/v20190902/clt_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_185001-194912.nc' 'SHA256' '399e2e407eba7b153dc92ebcf7c1ca30a719cc8138cad8b9914ba0b3cf659e2c'
'clt_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_195001-201412.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST/r1i1p1f2/Amon/clt/gn/v20190902/clt_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_195001-201412.nc' 'SHA256' 'fddb5f0b2f667de6e741b9326c605d01102d233ab1de3aa552118061299b0340'
'rlut_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST/r1i1p1f2/Amon/rlut/gn/v20190902/rlut_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_185001-194912.nc' 'SHA256' 'fc65c4e92f25d68428be6709cd362bee4e32865f0857a1fdf00dbbb6db5b10da'
'rlut_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_195001-201412.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST/r1i1p1f2/Amon/rlut/gn/v20190902/rlut_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_195001-201412.nc' 'SHA256' '38a05fff6707c20c17e57983b0b7ec0c6086b007ee2e34f9095ff8071d969979'
'rlutcs_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST/r1i1p1f2/Amon/rlutcs/gn/v20190902/rlutcs_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_185001-194912.nc' 'SHA256' 'b734997a68822b1e0804ceb34db2df8315e0768176dfc4b2f9dd5b8bd9b2bb11'
'rlutcs_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_195001-201412.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST/r1i1p1f2/Amon/rlutcs/gn/v20190902/rlutcs_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_195001-201412.nc' 'SHA256' 'bb68c9879c8cd6499f5ebc3a7f03800de9d66b17efe9ad4a293deadc1157b298'
'rsds_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST/r1i1p1f2/Amon/rsds/gn/v20190902/rsds_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_185001-194912.nc' 'SHA256' '21a37befad585a41ebac47537f7672fd13e2cc53cd8892740d2a376cf04fffde'
'rsds_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_195001-201412.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST/r1i1p1f2/Amon/rsds/gn/v20190902/rsds_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_195001-201412.nc' 'SHA256' 'f1f4f1e885f401ff6f916578285b091e379095ad087feacf133aeb3f06808244'
'rsdt_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST/r1i1p1f2/Amon/rsdt/gn/v20190902/rsdt_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_185001-194912.nc' 'SHA256' 'd2564c5376c6dcfa4f89d987672d24ef50baaa308051f394de916ddf1851ca1d'
'rsdt_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_195001-201412.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST/r1i1p1f2/Amon/rsdt/gn/v20190902/rsdt_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_195001-201412.nc' 'SHA256' 'cea450c549b904355702f5695674d1a68f61ae47a22270a57d07240a9248bce9'
'rsus_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST/r1i1p1f2/Amon/rsus/gn/v20190902/rsus_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_185001-194912.nc' 'SHA256' '081a01783bb5e5ecf04f0114014036d8cbf334fbbb1c9b806939e051174e9264'
'rsus_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_195001-201412.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST/r1i1p1f2/Amon/rsus/gn/v20190902/rsus_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_195001-201412.nc' 'SHA256' '64e1c95a7e0b1281b7be0fe49e907ac2b520e003d817da431e4aeba52a9559dc'
'rsut_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST/r1i1p1f2/Amon/rsut/gn/v20190902/rsut_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_185001-194912.nc' 'SHA256' '56f507447409de2892050e0623a59d15e5c0f10c77d2befd181cbd877b633214'
'rsut_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_195001-201412.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST/r1i1p1f2/Amon/rsut/gn/v20190902/rsut_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_195001-201412.nc' 'SHA256' '7f8e1eb59af2872ca825b5b04d5b4e3f02e82399867b3ef9b0f0571ce31e1746'
'rsutcs_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST/r1i1p1f2/Amon/rsutcs/gn/v20190902/rsutcs_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_185001-194912.nc' 'SHA256' 'be0a97e7a59813cb81055feffee6e761f6e02c33a156ccea216c526829249b2b'
'rsutcs_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_195001-201412.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/AerChemMIP/MOHC/UKESM1-0-LL/histSST/r1i1p1f2/Amon/rsutcs/gn/v20190902/rsutcs_Amon_UKESM1-0-LL_histSST_r1i1p1f2_gn_195001-201412.nc' 'SHA256' 'f45d975f8571be336c338ea7f8f5facbc50cc20688ad919d4dcd3fe787b85dd3'
'clt_Amon_HadGEM3-GC31-LL_piClim-control_r1i1p1f3_gn_185001-187912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-control/r1i1p1f3/Amon/clt/gn/v20191113/clt_Amon_HadGEM3-GC31-LL_piClim-control_r1i1p1f3_gn_185001-187912.nc' 'SHA256' '14429032dcefb32c6876bada86b61a19b5198042dc4617d90e8733e951a1107a'
'rlut_Amon_HadGEM3-GC31-LL_piClim-control_r1i1p1f3_gn_185001-187912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-control/r1i1p1f3/Amon/rlut/gn/v20191113/rlut_Amon_HadGEM3-GC31-LL_piClim-control_r1i1p1f3_gn_185001-187912.nc' 'SHA256' '2931f82d424740d344bfb9485aeb1dd1d7522b6676dfd4f0a661a17096e24091'
'rlutcs_Amon_HadGEM3-GC31-LL_piClim-control_r1i1p1f3_gn_185001-187912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-control/r1i1p1f3/Amon/rlutcs/gn/v20191113/rlutcs_Amon_HadGEM3-GC31-LL_piClim-control_r1i1p1f3_gn_185001-187912.nc' 'SHA256' 'baa3aa51bc7f20fb149bd42ba9033f40bcef513b1182c6aaa4e426a9db268eca'
'rsds_Amon_HadGEM3-GC31-LL_piClim-control_r1i1p1f3_gn_185001-187912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-control/r1i1p1f3/Amon/rsds/gn/v20191113/rsds_Amon_HadGEM3-GC31-LL_piClim-control_r1i1p1f3_gn_185001-187912.nc' 'SHA256' '040a889d7c3fe489ff1c792ad258a47973985e7702d1f1cb5072001f0910b20a'
'rsdt_Amon_HadGEM3-GC31-LL_piClim-control_r1i1p1f3_gn_185001-187912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-control/r1i1p1f3/Amon/rsdt/gn/v20191113/rsdt_Amon_HadGEM3-GC31-LL_piClim-control_r1i1p1f3_gn_185001-187912.nc' 'SHA256' 'e6e7245d0d6705ae4ac3425272196b6a2d1bd6ff646c3be92bad96a4546bdfa1'
'rsus_Amon_HadGEM3-GC31-LL_piClim-control_r1i1p1f3_gn_185001-187912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-control/r1i1p1f3/Amon/rsus/gn/v20191113/rsus_Amon_HadGEM3-GC31-LL_piClim-control_r1i1p1f3_gn_185001-187912.nc' 'SHA256' '6616bd8e1e4a3f7c08b10832ec8a8d68ab6de8453d6edccd9c83355eaf59caea'
'rsut_Amon_HadGEM3-GC31-LL_piClim-control_r1i1p1f3_gn_185001-187912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-control/r1i1p1f3/Amon/rsut/gn/v20191113/rsut_Amon_HadGEM3-GC31-LL_piClim-control_r1i1p1f3_gn_185001-187912.nc' 'SHA256' '09c443ecacd8c17030af52434e695c7147a9ca4ea789158eb6d8df156679160d'
'rsutcs_Amon_HadGEM3-GC31-LL_piClim-control_r1i1p1f3_gn_185001-187912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-control/r1i1p1f3/Amon/rsutcs/gn/v20191113/rsutcs_Amon_HadGEM3-GC31-LL_piClim-control_r1i1p1f3_gn_185001-187912.nc' 'SHA256' '15a9d76d14b49e7f66d1a7dec6301f9d7e75334607663bc1d0eadef9f4c2f5bb'
'clt_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r1i1p1f3/Amon/clt/gn/v20200923/clt_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_185001-194912.nc' 'SHA256' 'dec74709e1c7866d823a02a1f1d3ae413ee02a5ddeb482b42b7747805e8fa2a1'
'clt_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_195001-204912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r1i1p1f3/Amon/clt/gn/v20200923/clt_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_195001-204912.nc' 'SHA256' '2f58764e8281f3055f804d62e42f0512555ae78ad889e64e03bb00ae13aa3975'
'clt_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_205001-209912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r1i1p1f3/Amon/clt/gn/v20200923/clt_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_205001-209912.nc' 'SHA256' '535fbc2d9913ad781b416021d8755be63d41d5c5bc60f2e1ed23b734020f9637'
'rlut_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r1i1p1f3/Amon/rlut/gn/v20200923/rlut_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_185001-194912.nc' 'SHA256' 'd169e8fdb97cefe0d10bccdd56270faf5ee8d751f98eae72259b553c568d4fae'
'rlut_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_195001-204912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r1i1p1f3/Amon/rlut/gn/v20200923/rlut_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_195001-204912.nc' 'SHA256' 'ed947b46e9a32e9e2428792cfeac8cb5a4d4229765c12ffd25a76854e0cbc5eb'
'rlut_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_205001-209912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r1i1p1f3/Amon/rlut/gn/v20200923/rlut_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_205001-209912.nc' 'SHA256' '2a5a045418c6597e7f02f02c52a9b9f611b8eb6fc98592a265afb326c1974ac1'
'rlutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r1i1p1f3/Amon/rlutcs/gn/v20200923/rlutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_185001-194912.nc' 'SHA256' 'f7a8c42d027e16ffe7a60f1e08b8618f7f97347e7e180e5535dd488b24d61e52'
'rlutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_195001-204912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r1i1p1f3/Amon/rlutcs/gn/v20200923/rlutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_195001-204912.nc' 'SHA256' 'ebfc674cb8752c78156adf6a238810f780cc6faea25cf5b74e18572ca0d178cd'
'rlutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_205001-209912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r1i1p1f3/Amon/rlutcs/gn/v20200923/rlutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_205001-209912.nc' 'SHA256' 'ac445d668e383ad17aa1284a9dbc1c0f42ad23c5a6edb656719d4268064280dd'
'rsds_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r1i1p1f3/Amon/rsds/gn/v20200923/rsds_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_185001-194912.nc' 'SHA256' '12d3950b0038a63a7da27d4c480be0c7773d15df0c354005c2e3947ceafe36bd'
'rsds_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_195001-204912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r1i1p1f3/Amon/rsds/gn/v20200923/rsds_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_195001-204912.nc' 'SHA256' '99c7e93f30351cb872fc22a368b272686d3f0568e1c01203dc1e510722d7e4f8'
'rsds_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_205001-209912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r1i1p1f3/Amon/rsds/gn/v20200923/rsds_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_205001-209912.nc' 'SHA256' 'f6755dbeae4b379fac4142adefb1fa5e58f097faee76cd573c5b08f03b1cccd1'
'rsdt_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r1i1p1f3/Amon/rsdt/gn/v20200923/rsdt_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_185001-194912.nc' 'SHA256' '8f4a5d22654de2fa5a330d3636e8f7615c6b928fd815724fbcf0a88a35fdf53f'
'rsdt_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_195001-204912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r1i1p1f3/Amon/rsdt/gn/v20200923/rsdt_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_195001-204912.nc' 'SHA256' '9eee866ee9552cca64b7a24170d12e96010c1f4b831d85cc4a11bab945e88c23'
'rsdt_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_205001-209912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r1i1p1f3/Amon/rsdt/gn/v20200923/rsdt_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_205001-209912.nc' 'SHA256' '847faab2e6c7700537b5113c7ba60e020eb9e3c0804798a6779c97a954152777'
'rsus_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r1i1p1f3/Amon/rsus/gn/v20200923/rsus_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_185001-194912.nc' 'SHA256' '01bc44e9441c8911fe44e56082276387c456f15b0a6523f937c1b265a4d92b24'
'rsus_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_195001-204912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r1i1p1f3/Amon/rsus/gn/v20200923/rsus_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_195001-204912.nc' 'SHA256' 'a90091aace1d00a443226531c2c1667c79caf07ec9f6ab62868c4e6d182ef367'
'rsus_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_205001-209912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r1i1p1f3/Amon/rsus/gn/v20200923/rsus_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_205001-209912.nc' 'SHA256' 'dff066c87ba52328089e81c3b49ea83fcda99723a4701a864a30aca1fcd9bcab'
'rsut_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r1i1p1f3/Amon/rsut/gn/v20200923/rsut_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_185001-194912.nc' 'SHA256' '8b7ca10a54dd1dd5eac906ae829d8f2e7f6dbee874dc468fa497f92352041133'
'rsut_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_195001-204912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r1i1p1f3/Amon/rsut/gn/v20200923/rsut_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_195001-204912.nc' 'SHA256' '066e6cc269ca55e29218e042f359d0dbd873c7dd250a64729e4e424a321e64a8'
'rsut_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_205001-209912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r1i1p1f3/Amon/rsut/gn/v20200923/rsut_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_205001-209912.nc' 'SHA256' '7363c036f7a97f81c7abe5f6c2fe56bfe92f25e9427f745b85746e973d5a9d38'
'rsutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r1i1p1f3/Amon/rsutcs/gn/v20200923/rsutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_185001-194912.nc' 'SHA256' '3c4fb098e3338791fe9b0e0419b170c2c0f4e1f3e9b7e13cdf47c61149175436'
'rsutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_195001-204912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r1i1p1f3/Amon/rsutcs/gn/v20200923/rsutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_195001-204912.nc' 'SHA256' 'e968616fc14ec788e23f262cb34ce0ed5003ceb4560de948b22264a3721bf231'
'rsutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_205001-209912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r1i1p1f3/Amon/rsutcs/gn/v20200923/rsutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r1i1p1f3_gn_205001-209912.nc' 'SHA256' '28a07bcf23b5ad2e32a5f426267a729c82de6fd503322f60f5251f862381aa9f'
'clt_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r2i1p1f3/Amon/clt/gn/v20200923/clt_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_185001-194912.nc' 'SHA256' '818f241f4e44ba10a8ed4cdd03fce1f709babc66f8e9d3577de51d1345cfc542'
'clt_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_195001-204912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r2i1p1f3/Amon/clt/gn/v20200923/clt_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_195001-204912.nc' 'SHA256' 'f494625f2d9d236cc0d860b9c5dfbfb5a89182f05e39154b25f59dcdda95062b'
'clt_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_205001-209912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r2i1p1f3/Amon/clt/gn/v20200923/clt_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_205001-209912.nc' 'SHA256' '37d7c0d3362f1b33da4d47fd6569b3e6d0be376d96cae5869dc3811e2f82d15e'
'rlut_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r2i1p1f3/Amon/rlut/gn/v20200923/rlut_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_185001-194912.nc' 'SHA256' 'b9fb49924e55ca15f9dc1ab5e7fc2f07d6d345820d528c3b280ea24ced7a251d'
'rlut_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_195001-204912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r2i1p1f3/Amon/rlut/gn/v20200923/rlut_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_195001-204912.nc' 'SHA256' '08fef018ec27c7c8125df621866ca344fa0d99baa2eebc0991709db74d7a2780'
'rlut_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_205001-209912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r2i1p1f3/Amon/rlut/gn/v20200923/rlut_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_205001-209912.nc' 'SHA256' '0ee8b9220035b333156a8a45ca369a15788af8e36a9b8f2bbd5552a6f6cc3498'
'rlutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r2i1p1f3/Amon/rlutcs/gn/v20200923/rlutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_185001-194912.nc' 'SHA256' 'f56f4553514c5aa6efa4b548ec03c082a14522e9176042d374834720d4c1992d'
'rlutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_195001-204912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r2i1p1f3/Amon/rlutcs/gn/v20200923/rlutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_195001-204912.nc' 'SHA256' '66d92c7460adb77d9840c16f18c624952f76fba50f84512f138369ae13f64f9e'
'rlutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_205001-209912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r2i1p1f3/Amon/rlutcs/gn/v20200923/rlutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_205001-209912.nc' 'SHA256' '829821aef99bb52235981c5eb2b521b1e22cb75cbbe235157b1b68e8db458919'
'rsds_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r2i1p1f3/Amon/rsds/gn/v20200923/rsds_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_185001-194912.nc' 'SHA256' '7c86b2e5268357f47d8f1ce6df7b2824da44cd6737193f04097839d371cfa603'
'rsds_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_195001-204912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r2i1p1f3/Amon/rsds/gn/v20200923/rsds_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_195001-204912.nc' 'SHA256' 'd0d98fdb5b75cbb25fd0d436bffd714adf266462cd8e9330066e58e0d000625a'
'rsds_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_205001-209912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r2i1p1f3/Amon/rsds/gn/v20200923/rsds_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_205001-209912.nc' 'SHA256' 'fcad0f2e360e778f7a766f21d1df9ba06ff66bf92a1bff8c0d0479c14b5e92da'
'rsdt_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r2i1p1f3/Amon/rsdt/gn/v20200923/rsdt_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_185001-194912.nc' 'SHA256' 'b95ac1f70dc3a77bd648cf102f8ebfc80eeda4f6eb4102e5d24414a6972785ac'
'rsdt_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_195001-204912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r2i1p1f3/Amon/rsdt/gn/v20200923/rsdt_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_195001-204912.nc' 'SHA256' '9526786193b58e74a229146990a55555bac66d5b335ffc635bbf2cf6d942e506'
'rsdt_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_205001-209912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r2i1p1f3/Amon/rsdt/gn/v20200923/rsdt_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_205001-209912.nc' 'SHA256' '8f66ee1fa54413c5859df3a3405b1086ddcb6cc27e15b1b97b4565b76dec9e3d'
'rsus_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r2i1p1f3/Amon/rsus/gn/v20200923/rsus_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_185001-194912.nc' 'SHA256' '8fd3235f3480b6ee4601f04a1924d7032b6c6286f779fe3a1bc0e99343755e71'
'rsus_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_195001-204912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r2i1p1f3/Amon/rsus/gn/v20200923/rsus_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_195001-204912.nc' 'SHA256' '57152747834be9fdaf249e30adf664b55acbf32d092415cf3ceb3c4350e8d4c5'
'rsus_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_205001-209912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r2i1p1f3/Amon/rsus/gn/v20200923/rsus_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_205001-209912.nc' 'SHA256' '9b4c2d50ef57485c9a51f2bc1efb2a32c92762309bd631403aeab895ae159b95'
'rsut_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r2i1p1f3/Amon/rsut/gn/v20200923/rsut_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_185001-194912.nc' 'SHA256' '74b6ea11dc7409a4d004fb249b44762d7e96408bdc402160bc2c80db9f2baeda'
'rsut_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_195001-204912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r2i1p1f3/Amon/rsut/gn/v20200923/rsut_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_195001-204912.nc' 'SHA256' 'c00dc2c372e77e81091a4e62ad1bad97682b4e6e2b5c2782bfdd943e262a4a0f'
'rsut_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_205001-209912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r2i1p1f3/Amon/rsut/gn/v20200923/rsut_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_205001-209912.nc' 'SHA256' 'c07db0feb6a32fc59ba4dd8c6d9334ec6af4f8264209b952d5da3cfa0af5cedc'
'rsutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r2i1p1f3/Amon/rsutcs/gn/v20200923/rsutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_185001-194912.nc' 'SHA256' '3c954e3814b72261002ca3b2564f408892b460ec55e11d6cc10c87e922dade37'
'rsutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_195001-204912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r2i1p1f3/Amon/rsutcs/gn/v20200923/rsutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_195001-204912.nc' 'SHA256' '6bd8811cd88d50127356aade719f81c00e29aa3ce8449dfa0fc8d54091ab52d7'
'rsutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_205001-209912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r2i1p1f3/Amon/rsutcs/gn/v20200923/rsutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r2i1p1f3_gn_205001-209912.nc' 'SHA256' '5e4077c6dd78bd039623bc21acd483936006cde48937ca6e071b8b1fac3d07ba'
'clt_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r3i1p1f3/Amon/clt/gn/v20200924/clt_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_185001-194912.nc' 'SHA256' '5af5c59f954e79c58f92124d76c171407e9ffe5f05d6f5a68664e9a8794f87bf'
'clt_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_195001-204912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r3i1p1f3/Amon/clt/gn/v20200924/clt_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_195001-204912.nc' 'SHA256' '80522ded07bba3a399570ef6ab95ae5f9ff5b37b36c192f7cef21dab00f741e1'
'clt_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_205001-209912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r3i1p1f3/Amon/clt/gn/v20200924/clt_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_205001-209912.nc' 'SHA256' '483836d4c0413d85e33dcc34ec20e26b19dd9c8992a26f242b7b8e1105645a70'
'rlut_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r3i1p1f3/Amon/rlut/gn/v20200924/rlut_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_185001-194912.nc' 'SHA256' 'cc143bb00d16455afe0862a1bb67dabd6f685a28f58a5bd11122dc337b39d7af'
'rlut_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_195001-204912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r3i1p1f3/Amon/rlut/gn/v20200924/rlut_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_195001-204912.nc' 'SHA256' 'ed4c5cf783d6034195ee5d492e47c1479afb2355fb5863db238c8ff6ef9f835c'
'rlut_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_205001-209912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r3i1p1f3/Amon/rlut/gn/v20200924/rlut_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_205001-209912.nc' 'SHA256' '643a26f64b76f8957ff85904121763fb91102d8002520beae97a93bf56617018'
'rlutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r3i1p1f3/Amon/rlutcs/gn/v20200924/rlutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_185001-194912.nc' 'SHA256' 'be2b5689fcac1054613dc11fee1ce29131a481c3b59aa48ff5133a192e1723f8'
'rlutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_195001-204912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r3i1p1f3/Amon/rlutcs/gn/v20200924/rlutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_195001-204912.nc' 'SHA256' 'be3008590f2dd8e021e1f64de43fa0b15ac24317de87b6df82527dbdaa595851'
'rlutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_205001-209912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r3i1p1f3/Amon/rlutcs/gn/v20200924/rlutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_205001-209912.nc' 'SHA256' '1be9b806089efb5d8b5a8f4d0f8511e0e9771e8d9aa7173f802e77bfe81b5ad5'
'rsds_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r3i1p1f3/Amon/rsds/gn/v20200924/rsds_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_185001-194912.nc' 'SHA256' 'babc4758ecc6ceaf9a2d275595ba30451c06fe5e993b8ec5b19e13d29ab5f987'
'rsds_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_195001-204912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r3i1p1f3/Amon/rsds/gn/v20200924/rsds_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_195001-204912.nc' 'SHA256' '26e867ee59725834cccf5d5f3a798a75e5fba165c750b90617925b4ace757d12'
'rsds_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_205001-209912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r3i1p1f3/Amon/rsds/gn/v20200924/rsds_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_205001-209912.nc' 'SHA256' '10b81cc759d2737ad76d2f8d0b3384ed95ed99f7ddd7ba114a57bda56b0fb53f'
'rsdt_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r3i1p1f3/Amon/rsdt/gn/v20200924/rsdt_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_185001-194912.nc' 'SHA256' '92b3dd9afa6466935a276ddc0be13cb638dcfe65c8befbb5ba1d6339780d9111'
'rsdt_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_195001-204912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r3i1p1f3/Amon/rsdt/gn/v20200924/rsdt_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_195001-204912.nc' 'SHA256' 'e47a8ac5ac109f0b68ba2c9abbb4c3e5483eb2e2f9b0cf27168627243ef0475c'
'rsdt_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_205001-209912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r3i1p1f3/Amon/rsdt/gn/v20200924/rsdt_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_205001-209912.nc' 'SHA256' 'ab2e08e9faf3a7cca17f5644f0d022c09b09cbd37fe8cb8afb2459ffa7bfd1df'
'rsus_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r3i1p1f3/Amon/rsus/gn/v20200924/rsus_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_185001-194912.nc' 'SHA256' 'b32ee78c3b7f2d933af14d1af71a0cadb44260d6c9fcb64f6d97fd2f4a98b635'
'rsus_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_195001-204912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r3i1p1f3/Amon/rsus/gn/v20200924/rsus_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_195001-204912.nc' 'SHA256' 'b5c6b6695a9b5e235933d3f29965e90ca5d3b7b59efd3bf3726b274585c76d9c'
'rsus_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_205001-209912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r3i1p1f3/Amon/rsus/gn/v20200924/rsus_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_205001-209912.nc' 'SHA256' '99146d873bb4abd01ca26176f5970798f648cfb0988799dcd62c1ac669351d57'
'rsut_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r3i1p1f3/Amon/rsut/gn/v20200924/rsut_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_185001-194912.nc' 'SHA256' 'b950ac92655937c8ef927ce803328f2a547ea91545ea878235efaf8e576d23cb'
'rsut_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_195001-204912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r3i1p1f3/Amon/rsut/gn/v20200924/rsut_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_195001-204912.nc' 'SHA256' 'c09113fe21d8d04558d517886c13d84f1a3c0cfe707a3710bde21326c88a99dd'
'rsut_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_205001-209912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r3i1p1f3/Amon/rsut/gn/v20200924/rsut_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_205001-209912.nc' 'SHA256' '541ac0dc20aca3d1612ef6617dd0395e382837f4c61caf45038ac92dc77e885c'
'rsutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_185001-194912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r3i1p1f3/Amon/rsutcs/gn/v20200924/rsutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_185001-194912.nc' 'SHA256' '39c0cb84f5196ee543d6b05a2c910eaf502e6cd625ae136411569fd214a416ff'
'rsutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_195001-204912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r3i1p1f3/Amon/rsutcs/gn/v20200924/rsutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_195001-204912.nc' 'SHA256' 'c9bc5bdec34f73400a69701868d4c65c5d8718980b824bd7c5fa2d0b080ae3aa'
'rsutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_205001-209912.nc' 'https://esgf.ceda.ac.uk/thredds/fileServer/esg_cmip6/CMIP6/RFMIP/MOHC/HadGEM3-GC31-LL/piClim-histaer/r3i1p1f3/Amon/rsutcs/gn/v20200924/rsutcs_Amon_HadGEM3-GC31-LL_piClim-histaer_r3i1p1f3_gn_205001-209912.nc' 'SHA256' 'd49b6bdcd37eaa6b711d55d056fabeb10b014eef2e44fbd9734195fedd3f90ad'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

WGET_TRUSTED_CERTIFICATES=$ESG_HOME/certificates


# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags] [openid] [username]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqhHI:T' OPT; do
    case $OPT in
        H) skip_security=1 && use_http_sec=1;; #       : Authenticate with OpenID (username,) and password, without the need for a certificate.
        T) force_TLSv1=1;;              #       : Forces wget to use TLSv1. 
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day); for certificate-less authentication (see -H option), this flag will force login and refresh cookies.
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        I) username_supplied="$OPTARG";;    #<user_id> : Explicitly set user ID.  By default, the user ID is extracted from the last component of the OpenID URL.  Use this flag to override this behaviour.                   
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1 && use_cookies_for_http_basic_auth_start=1;;            #       : completely skip security. It will only work if the accessed data is not secured at all. -- works only if the accessed data is unsecured or a certificate exists or cookies are saved (latter applies to -H option only).
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        p) clean_work=0;;               #       : preserve data that failed checksum
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java could not be found." >&2
        return 1
    fi
    if java -version 2>&1|grep openjdk >/dev/null; then
        openjdk=1;
    else
        openjdk=0;
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if [ $openjdk -eq 1 ]; then
        mVer=${jversion[0]}
        if ((mVer<5)); then
            echo "Openjdk detected. Version 9+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    else
    
        if ((mVer<5)); then
            echo "Java version 1.5+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    fi
}

check_myproxy_logon() {
    if ! type myproxy-logon >& /dev/null; then
	echo "myproxy-logon could not be found." >&2
	return 1
    fi
    echo "myproxy-logon found" >&2
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from github
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2

    if ! wget -O $ESG_HOME/esg-truststore.ts --no-check-certificate https://github.com/ESGF/esgf-dist/raw/master/installer/certs/esg-truststore.ts; then
        echo "Could not fetch esg-truststore";
        return 1
    fi
    
    if ! wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

# Retrieve ESG credentials
unset pass
get_credentials() {
    if check_java
    then
	use_java=1
    else	
	use_java=0
	echo "No suitable java for obtaining certificate - checking for myproxy-logon instead" >&2
	check_myproxy_logon || exit 1
    fi
    #get all certificates
    get_certificates

    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    


    if [ $use_java -eq 1 ]
    then
        local args=
        #get password
	[[ ! "$pass" ]] && read -sp "MyProxy Password? " pass
        [[ "$openId" ]] && args=$args" --oid $openId"
        [[ "$pass" ]] && args=$args" -P $pass"
        [[ "$username" ]] && args=$args" -l $username"
        
        echo -n $'\nRetrieving Credentials...' >&2
        if ! java $(proxy_to_java) -jar $MYPROXY_GETCERT $args --ca-directory $ESG_CERT_DIR --output $ESG_CREDENTIALS ; then        
            echo "Certificate could not be retrieved"
            exit 1
        fi
        echo "done!" >&2
    else
        args=`openid_to_myproxy_args $openId $username` || exit 1
        if ! myproxy-logon $args -b -o $ESG_CREDENTIALS
	then
            echo "Certificate could not be retrieved"
	    exit 1
        fi
	cp $HOME/.globus/certificates/* $ESG_CERT_DIR/	
    fi
}

openid_to_myproxy_args() {
  python - <<EOF || exit 1
import sys
import re
import xml.etree.ElementTree as ET
import urllib2
openid = "$1"
username = "$2" or re.sub(".*/", "", openid)
e = ET.parse(urllib2.urlopen(openid))
servs = [el for el in e.getiterator() if el.tag.endswith("Service")]
for serv in servs:
    servinfo = dict([(re.sub(".*}", "", c.tag), c.text)
                     for c in serv.getchildren()])
    try:
        if servinfo["Type"].endswith("myproxy-service"):
            m = re.match("socket://(.*):(.*)", servinfo["URI"])
            if m:
                host = m.group(1)
                port = m.group(2)
                print "-s %s -p %s -l %s" % (host, port, username)
                break
    except KeyError:
        continue
else:
    sys.stderr.write("myproxy service could not be found\n")
    sys.exit(1)
EOF
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR --ca-certificate=$ESG_CERT"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum_ $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

#Our own sha256sum function call that takes into account machines that don't have sha256sum but do have sha2 (i.e. mac os x)
sha256sum_() {
    hash -r
    if type sha256sum >& /dev/null; then
        echo $(sha256sum $@)
    elif type shasum >& /dev/null; then
        echo $(shasum -a 256 $@)
    else
        echo $(sha2 -q -256 $@)
    fi
}

get_mod_time_() {
    if ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    else
        #on linux (cygwin) modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

#Download data from node using cookies and not certificates.
download_http_sec()
{
  #The data to be downloaded.
  data=" $url"
  filename="$file"  

  #Wget args.
  if ((insecure)) 
  then
   wget_args=" --no-check-certificate --cookies=on  --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt " 
  else
   wget_args=" --ca-directory=$WGET_TRUSTED_CERTIFICATES --cookies=on --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt "  
  fi 

  if ((use_cookies_for_http_basic_auth_start)) || ((use_cookies_for_http_basic_auth)) 
  then
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
  fi
  
  if((force_TLSv1))
  then
   wget_args=" $wget_args"" --secure-protocol=TLSv1 "
  fi
  
  
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
    wget_args="$wget_args $ESGF_WGET_OPTS"
  fi  
  

  #use cookies for the next downloads
  use_cookies_for_http_basic_auth=1;
   
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "wget $wget_args $data\n"
  fi


  #Try to download the data. 
  command="wget $wget_args -O $filename $data"
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
      
  #Extract orp service from url ?
  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" == 1 )) && 
  if  echo "$http_resp" | grep -q "/esg-orp/"      
  then
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   orp_service=$(echo "$urls" | tr '\n' ' ' | cut -d' ' -f 2)


   #Use cookies for transaction with orp.
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
   
   #Download data using either http basic auth or http login form.
   if [[ "$openid_c" == */openid/  || "$openid_c" == */openid ]]
   then
    download_http_sec_open_id
   else
    download_http_sec_decide_service
   fi
  else  
   if    echo "$http_resp" | grep -q "401 Unauthorized"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || echo "$http_resp" | grep -q "Connection timed out."  \
      || echo "$http_resp" | grep -q "no-check-certificate"  \
      || (( $cmd_exit_status != 0 ))      
   then 
    echo "ERROR : http request to OpenID Relying Party service failed."
    failed=1
   fi
  fi
}


#Function that decides which implementaion of idp to use.
download_http_sec_decide_service()
{
  #find claimed id

  pos=$(echo "$openid_c" | egrep -o '/' | wc -l)
  username_c=$(echo "$openid_c"  | cut -d'/' -f "$(($pos + 1))")
  esgf_uri=$(echo "$openid_c" | egrep -o '/esgf-idp/openid/')

  host=$(echo "$openid_c"  | cut -d'/' -f 3)
  #test ceda first.

  if [[ -z "$esgf_uri" ]]
  then
   openid_c_tmp="https://""$host""/openid/"
  else
   openid_c_tmp="https://""$host""/esgf-idp/openid/" 
  fi

  command="wget "$openid_c_tmp" --no-check-certificate ${force_TLSv1:+--secure-protocol=TLSv1} -O-"
        
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
   command="$command $ESGF_WGET_OPTS"
  fi  
          
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "$command\n"
  fi
            

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
  

  if    echo "$http_resp" | grep -q "[application/xrds+xml]"  \
     && echo "$http_resp" | grep -q "200 OK"  \
     && (( cmd_exit_status == 0 ))       
  then
   openid_c=$openid_c_tmp
   download_http_sec_open_id
  else
   if [[ -z "$esgf_uri" ]]
   then
    echo "ERROR : HTTP request to OpenID Relying Party service failed."
    failed=1
   else
   download_http_sec_cl_id
   fi
  fi
}


download_http_sec_retry()
{
  echo -e "\nRetrying....\n"
  #Retry in case that last redirect did not work, this happens with older version of wget.
  command="wget $wget_args $data"
      
  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi   
   
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"

  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
   
  if    echo "$http_resp" | grep -q "401 Unauthorized"  \
     || echo "$http_resp" | grep -q "403: Forbidden"  \
     || echo "$http_resp" | grep -q "Connection timed out."  \
     || echo "$http_resp" | grep -q "no-check-certificate"  \
     || (( $cmd_exit_status != 0 ))      
  then 
   echo -e "\nERROR : Retry failed.\n"
   #rm "$filename"
   failed=1
  fi #if retry failed.
}

#Function for downloading data using the claimed id.
download_http_sec_cl_id()
{
  #Http request for sending openid to the orp service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\"  $wget_args -O- https://$orp_service/esg-orp/j_spring_openid_security_check.htm "

  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "wget $command\n"
  fi 
  
  
  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"

  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
    
  
  #Extract orp service from openid ?
  #Evaluate response.If redirected to idp service send the credentials.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( redirects == 2  )) && 
  if  echo "$http_resp" | grep -q "login.htm"  && (( cmd_exit_status == 0 ))   
  then 
  
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   idp_service=$(echo "$urls"  | tr '\n' ' ' | cut -d' ' -f 2) 
      
   command="wget --post-data  password=\"$password_c\" $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$idp_service/esgf-idp/idp/login.htm"
   

   #Debug message.
   if  ((debug))
   then
    echo -e "Executing:\n"
    echo -e "wget $command\n"
   fi 

   #Execution of command.
   http_resp=$(eval $command  2>&1)
   cmd_exit_status="$?"
      
   if ((debug))
   then
    echo -e "\nHTTP response:\n $http_resp\n"
   fi 
        
   #Evaluate response. 
   #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
   #(( "$redirects" != 5 )) \ 
   if    echo "$http_resp" | grep -q "text/html"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || (( cmd_exit_status != 0 ))        
   then 
    rm "$filename"
    download_http_sec_retry
   fi
 
  else
   echo "ERROR : HTTP request to OpenID Provider service failed."
   failed=1
  fi #if redirected to idp.  
}



download_http_sec_open_id()
{
  #Http request for sending openid to the orp web service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\" --header=\"esgf-idea-agent-type:basic_auth\" --http-user=\"$username_c\" --http-password=\"$password_c\"  $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$orp_service/esg-orp/j_spring_openid_security_check.htm "


  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi 

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 

  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" != 7 )) ||
  if   echo "$http_resp" | grep -q "text/html"  ||  (( $cmd_exit_status != 0 ))   
  then
   rm "$filename"
   download_http_sec_retry     
  fi #if error during http basic authentication. 
  
}


download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c ${force_TLSv1:+--secure-protocol=TLSv1} $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                if ((use_http_sec))
                then
                 download_http_sec
                 if ((failed))
                 then
                  break
                 fi
                else
                 $wget -O "$file" $url || { failed=1; break; }  
                fi                
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

http_basic_auth_func_info_message()
{
  echo  "********************************************************************************"
  echo  "*                                                                              *"
  echo  "* Note that new functionality to allow authentication without the need for     *"
  echo  "* certificates is available with this version of the wget script.  To enable,  *"
  echo  "* use the \"-H\" option and enter your OpenID and password when prompted:        *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -H [options...]                                     *"
  echo  "*                                                                              *"
  echo  "* For a full description of the available options use the help option:         *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -h                                                  *"
  echo  "*                                                                              *"
  echo  "********************************************************************************"
}

#
# MAIN
#

if ((!use_http_sec))
then 
 http_basic_auth_func_info_message
fi

echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
Script created for 112 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials

if ((use_http_sec))
then 
     
 if (( ! insecure))
 then 
  get_certificates
 fi

 #Cookies folder.
 COOKIES_FOLDER="$ESG_HOME/wget_cookies"
 
 if (( force ))
 then
  if [ -d $COOKIES_FOLDER ] 
  then
   rm -rf $COOKIES_FOLDER
  fi
 fi

 #Create cookies folder. 
 if [[ ! -d $COOKIES_FOLDER ]] 
 then
  mkdir $COOKIES_FOLDER
 fi
 
 if((! use_cookies_for_http_basic_auth_start))
 then

  #Read openid.
  if [[ ! -z "$openId" ]]
  then
   openid_c="$openId"
  elif ( (("$#" > 1)) || (("$#" == 1)) ) 
  then
   openid_c=$1
  else
   read -p    "Enter your openid : " openid_c
  fi
  
  
  #Read username.
  if [[ ! -z "$username_supplied" ]]
  then
   username_c="$username_supplied"
  elif (("$#" == 2))
  then
   username_c=$2
  elif [[ "$openid_c" == */openid/ || "$openid_c" == */openid ]]
  then
   read -p    "Enter username : " username_c
  fi
  
  #Read password.
  read -s -p "Enter password : " password_c
  echo -e "\n"

 fi #use cookies

fi #use_http_sec 


#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_


echo "done"
